name: Build
on: [ push, pull_request ]

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go-version: [1.13, 1.14, 1.15]
    steps:
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Test
      run: make test

    - name: Upload coverage to Codecov
      timeout-minutes: 5
      run: curl -s https://codecov.io/bash | bash
  
  interop-setup:
    runs-on: ubuntu-20.04
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    outputs:
      CACHE_KEY_INTEROP: ${{ steps.cache.outputs.CACHE_KEY_INTEROP }}
      GITHUB_REPOSITORY_NAME: ${{ steps.cache.outputs.GITHUB_REPOSITORY_NAME }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set outputs
        id: cache
        run: |
          echo "::set-output name=CACHE_KEY_INTEROP::${{ hashFiles('.github/workflows/interop/Dockerfile') }}"
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"

  build-interop-image:
    needs: [interop-setup, test]
    runs-on: ubuntu-20.04
    env:
      DOCKER_BUILDKIT: 1
      CACHE_KEY_INTEROP: ${{ needs.interop-setup.outputs.CACHE_KEY_INTEROP }}
      GITHUB_REPOSITORY_NAME: ${{ needs.interop-setup.outputs.GITHUB_REPOSITORY_NAME }}
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name:
      run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io --username ${{ secrets.CR_USER }} --password-stdin
          docker build -f .github/workflows/interop/Dockerfile --no-cache -t ${{ env.GITHUB_REPOSITORY_NAME }}/kerigo-interop:${{ env.CACHE_KEY_INTEROP }} .
          docker tag ${{ env.GITHUB_REPOSITORY_NAME }}/kerigo-interop:${{ env.CACHE_KEY_INTEROP }} ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/kerigo-interop:latest
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/kerigo-interop:latest
          mkdir -p ${GITHUB_WORKSPACE}/cache
          touch ${GITHUB_WORKSPACE}/cache/${{ env.CACHE_KEY_INTEROP }}
  
cache-test-vectors:
    runs-on: ubuntu-20.04
    outputs:
      BOBEVE_BOB: ${{ steps.cache.outputs.BOBEVE_BOB }}
      BOBEVE_EVE: ${{ steps.cache.outputs.BOBEVE_EVE }}
      SAMEVE_SAM: ${{ steps.cache.outputs.SAMEVE_SAM }}
      SAMEVE_EVE: ${{ steps.cache.outputs.SAMEVE_EVE }}
    steps:
    - name: Checkout KERI
      uses: actions/checkout@v2
      with:
        repository: m00sey/keri
        ref: keri-automated-interop
        path: keri
    - name: Set outputs
      id: cache
      run: |
        echo "::set-output name=BOBEVE_BOB::$(cat keri/test_vectors/bob-eve/bob.out )"
        echo "::set-output name=BOBEVE_EVE::$(cat keri/test_vectors/bob-eve/eve.out )"
        echo "::set-output name=SAMEVE_SAM::$(cat keri/test_vectors/sam-eve/sam.out )"
        echo "::set-output name=SAMEVE_EVE::$(cat keri/test_vectors/sam-eve/eve.out )"

  interop-test:
    needs: [build-interop-image, cache-test-vectors]
    runs-on: ubuntu-20.04
    env:
      BOBEVE_BOB: ${{ needs.interop-setup.outputs.BOBEVE_BOB }}
      BOBEVE_EVE: ${{ needs.interop-setup.outputs.BOBEVE_EVE }}
      SAMEVE_SAM: ${{ needs.interop-setup.outputs.SAMEVE_SAM }}
      SAMEVE_EVE: ${{ needs.interop-setup.outputs.SAMEVE_EVE }}
    strategy:
      matrix:
        direct-mode-cfg:
        - { actor-lang: go, actor: bob, companion-lang: go, companion: eve, assert: $env.BOBEVE_BOB }
        - { actor-lang: go, actor: sam, companion-lang: go, companion: eve, assert: $env.BOBEVE_EVE }
        # - { actor-lang: go, actor: bob, companion-lang: py, companion: eve}
        # - { actor-lang: go, actor: sam, companion-lang: py, companion: eve}
        # - { actor-lang: py, actor: bob, companion-lang: go, companion: eve}
        # - { actor-lang: py, actor: sam, companion-lang: go, companion: eve}

    - name: run interop
      run: | 
        echo "pull keri test vectors ${{ matrix.actor }}-${{ matrix.companion }}"
        echo "docker pull -d keri${{ matrix.actor-lang }} ${{ matrix.actor }}"
        echo "docker pull -d keri${{ matrix.companion-lang }} ${{ matrix.companion }}"
        echo "test against ${{ matrix.assert }}"
